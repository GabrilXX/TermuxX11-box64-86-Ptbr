#!/bin/bash

cd $HOME/Box64-Ptbr

if [ ! -e ubuntu-fs/opt/wine ]; then
 wget -q --show-progress https://github.com/Kron4ek/Wine-Builds/releases/download/8.2/wine-8.2-staging-amd64.tar.xz
 mv wine-8.2-staging-amd64.tar.xz ubuntu-fs/opt/wine.tar.xz
fi

if [ ! -e update-timestamp ]; then
 latestupdate=$(curl --connect-timeout 6 -s https://raw.githubusercontent.com/GabrilXX/TermuxX11-box64-86-Ptbr/main/update-timestamp)
 if [[ "$latestupdate" = "" ]]; then
  echo "sem conexão com a internet, tente novamente mais tarde"
  return
 fi
 echo "$latestupdate">update-timestamp
fi
current=$(date '+%s')
timestamp=$(cat update-timestamp)
seconds=$((current - timestamp))
minutes=$(((seconds / 60) % 60))
hours=$(((seconds / 3600) % 24))
days=$((seconds / 86400))
echo ""
echo -n "Installed patch released "
if [ $days = 1 ]; then echo -n "$days day, "
else echo -n "$days days, "; fi
if [ $hours = 1 ]; then echo -n "$hours hour, "
else echo -n "$hours hours, "; fi
if [ $minutes = 1 ]; then echo "$minutes minute ago"
else echo "$minutes minutes ago"; fi

sleep 0.5

latestupdate=$(curl --connect-timeout 6 -s https://raw.githubusercontent.com/GabrilXX/TermuxX11-box64-86-Ptbr/main/update-timestamp)
if [[ "$latestupdate" = "" ]]; then
 echo "Não foi possível verificar se há atualizações"
else
 if [ "$timestamp" = "$latestupdate" ]; then
 echo "Box64-Ptbr está atualizado!"
 else
  echo -n "nova atualização disponível! Voce quer instalar ? (Y/n) "
  read sel
  if [ "$sel" = "Y" ] || [ "$sel" = "y" ]; then
   curl -s -o ~/y https://raw.githubusercontent.com/GabrilXX/TermuxX11-box64-86-Ptbr/main/patch
   chmod +x ~/y
   ~/y
   echo "$latestupdate">~/Box64-Ptbr/update-timestamp
   exec $PREFIX/bin/iniciar-box
  else
   echo "atualização nao foi instalado"
  fi
 fi
fi

sleep 0.5

cd $HOME/Box64-Ptbr
sudo chown -hR $(whoami) ubuntu-fs/root $>/dev/null
touch ubuntu-fs/root/.hushlogin
mkdir -p /sdcard/Android/data/com.termux/files/Download &>/dev/null
termux-x11 :1 &>/dev/null &
rm -rf $PREFIX/tmp/pulse-*
pulseaudio -k >/dev/null 2>&1
pulseaudio --start --load="module-native-protocol-tcp auth-ip-acl=127.0.0.1 auth-anonymous=1" --exit-idle-time=-1

mkdir /sdcard/Box64-Ptbr >/dev/null 2>&1
cp -n ubuntu-fs/opt/Env.conf /sdcard/Box64-Ptbr >/dev/null 2>&1
cp -n ubuntu-fs/opt/dxvk.conf /sdcard/Box64-Ptbr >/dev/null 2>&1
negus=$(cat ubuntu-fs/opt/script.conf)
if [ "$negus" = "" ]; then
 echo ""
 echo "1) Proot"
 echo "2) Chroot (root necessário)"
 read oleg
elif [ "$negus" = "proot" ]; then
 oleg=1
else
 oleg=2
fi
case $oleg in
1)
echo "proot">ubuntu-fs/opt/script.conf
if [[ "$(sudo a)" = *"Voce possui root?"* ]]; then
 ./start-proot.sh
else
 echo "Cuidado! Usando proot com root e instável !"
 sleep 3
 sudo chown -hR root ubuntu-fs/root $>/dev/null
 sudo ./start-proot.sh
 sudo chown -hR $(whoami) ubuntu-fs/root $>/dev/null
fi
;;
2)
echo "chroot">ubuntu-fs/opt/script.conf
sudo chown -hR root ubuntu-fs/root $>/dev/null
sudo ./start-chroot.sh
sudo chown -hR $(whoami) ubuntu-fs/root $>/dev/null
;;
esac

pkill -f "app_process / com.termux.x11"

if [ -e ~/Box64-Ptbr/ubuntu-fs/opt/restart-termux-box ]; then
rm -rf ~/Box64-Ptbr/ubuntu-fs/opt/restart-termux-box
 exec $0
fi
